function plant_properties = F16_Nguyen_plant_properties(libalias)
%
% Returns a struct holding the properties of
% the "F16_Nguyen_plant", obtained by calling
% the "F16_Nguyen_clib".
%

[num_outputs, output_names] = num_and_names(libalias, 'plant_outputs');

[num_states, state_names] = num_and_names(libalias, 'plant_states');

[num_inputs, input_names] = num_and_names(libalias, 'plant_inputs');
[~, default_inputs]       = calllib(libalias, 'F16_Nguyen_clib_plant_default_inputs', ...
    zeros(num_inputs, 1), num_inputs);

[num_trim_inflags, trim_inflag_names] = num_and_names(libalias, 'trim_inflags');
[~, default_trim_inflags]             = calllib(libalias, 'F16_Nguyen_clib_trim_default_inflags', ...
    int32(zeros(num_trim_inflags, 1)), num_trim_inflags);

[num_trim_inputs, trim_input_names] = num_and_names(libalias, 'trim_inputs');
[~, default_trim_inputs]            = calllib(libalias, 'F16_Nguyen_clib_trim_default_inputs', ...
    zeros(num_trim_inputs, 1), num_trim_inputs);

[num_trim_outputs, trim_output_names] = num_and_names(libalias, 'trim_outputs');

[num_aerodataset_inputs, ...
    aerodataset_input_names] = num_and_names(libalias, ...
    'plant_aerodataset_inputs');

[num_aerodataset_coefficients, ...
    aerodataset_coefficient_names] = num_and_names(libalias, ...
    'plant_aerodataset_coefficients');

[num_aeroforce_and_moment_inputs, ...
    aeroforce_and_moment_input_names] = num_and_names(libalias, ...
    'plant_aeroforce_and_moment_inputs');

[num_aeroforce_and_moment_coefficients, ...
    aeroforce_and_moment_coefficient_names] = num_and_names(libalias, ...
    'plant_aeroforce_and_moment_coefficients');

[num_engine_states, ...
    engine_state_names] = num_and_names(libalias, ...
    'plant_engine_states');

[num_engine_outputs, ...
    engine_output_names] = num_and_names(libalias, ...
    'plant_engine_outputs');

[num_engine_dataset_outputs, ...
    engine_dataset_output_names] = num_and_names(libalias, ...
    'plant_engine_dataset_outputs');

[num_engine_inputs, ...
    engine_input_names] = num_and_names(libalias, ...
    'plant_engine_inputs');

plant_properties = struct( ...
    'num_states', num_states, ...
    'state_names', {state_names}, ...
    'num_outputs', num_outputs, ...
    'output_names', {output_names}, ...
    'num_inputs', num_inputs, ...
    'input_names', {input_names}, ...
    'default_inputs', cell2struct(num2cell(default_inputs), input_names), ...
    ...
    'num_trim_inflags', num_trim_inflags, ...
    'trim_inflag_names', {trim_inflag_names}, ...
    'default_trim_inflags', cell2struct(num2cell(default_trim_inflags), trim_inflag_names), ...
    'num_trim_inputs', num_trim_inputs, ...
    'trim_input_names', {trim_input_names}, ...
    'default_trim_inputs', cell2struct(num2cell(default_trim_inputs), trim_input_names), ...
    'num_trim_outputs', num_trim_outputs, ...
    'trim_output_names', {trim_output_names}, ...
    ...
    'num_aerodataset_inputs', num_aerodataset_inputs, ...
    'aerodataset_input_names', {aerodataset_input_names}, ...
    'num_aerodataset_coefficients', num_aerodataset_coefficients, ...
    'aerodataset_coefficient_names', {aerodataset_coefficient_names}, ...
    'num_aeroforce_and_moment_inputs', num_aeroforce_and_moment_inputs, ...
    'aeroforce_and_moment_input_names', {aeroforce_and_moment_input_names}, ...
    'num_aeroforce_and_moment_coefficients', num_aeroforce_and_moment_coefficients, ...
    'aeroforce_and_moment_coefficient_names', {aeroforce_and_moment_coefficient_names}, ...
    ...
    'num_engine_states', num_engine_states, ...
    'engine_state_names', {engine_state_names}, ...
    'num_engine_outputs', num_engine_outputs, ...
    'engine_output_names', {engine_output_names}, ...
    'num_engine_inputs', num_engine_inputs, ...
    'engine_input_names', {engine_input_names}, ...
    'num_engine_dataset_outputs', num_engine_dataset_outputs, ...
    'engine_dataset_output_names', {engine_dataset_output_names});

end


%
% Helper functions.
%

function [num, names] = num_and_names(libalias, interface_enum)
%
% Gets the number of elements and the names
% of a plant's interface enum (e.g., 'states',
% 'outputs', etc).
%

num = calllib(libalias, ['F16_Nguyen_clib_num_', interface_enum]);

namesfun     = ['F16_Nguyen_clib_', interface_enum(1:end - 1), '_names'];
[err, names] = calllib(libalias, namesfun, ...
    libpointer('stringPtrPtr', cell(num, 1)), num);
if err ~= 0
    error(['F16_Nguyen_plant_properties::num_and_names:', ...
        ' "%s" returned an error (%d).'], namesfun, err);

end

end
